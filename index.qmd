---
title: "Turnaround Dates - The Black and White Box"
format: 
  html:
    css: styles.css
execute:
  echo: false
  warning: false
---

```{r}
#| label: load-packages

library(rvest)
library(httr2)
library(tibble)
library(dplyr)
library(purrr)
library(knitr)
library(lubridate)
library(bizdays)

library(TBAWBTurnaroundTimes)
```

```{r}
#| label: get-current-datetime

current_datetime <- lubridate::now(tzone = "Pacific/Auckland")
current_date <- lubridate::as_date(current_datetime, tz = "Pacific/Auckland")
```

```{r}
#| label: access-nz-holidays-api

# NZ Holidays API key comes from system environment:
#  - Local development: .Renviron
#  - Production: github secret
nz_holidays_api_key <- Sys.getenv("NZ_HOLIDAYS_API_KEY")

# Call NZ Holidays API
holidays_df <- get_nz_holidays_from_year(
  api_key = nz_holidays_api_key
)

# Select only National holidays and Auckland-specific holidays
holiday_dates_df <- holidays_df |>
  dplyr::filter(
    (stringr::str_detect(HolidayName, "Auckland")) |
      (Type == "National")
  ) |> 
  dplyr::mutate(across(where(is.Date), ~lubridate::ymd(.x, tz = "Pacific/Auckland"))) |> # Convert to POSIXt
  dplyr::mutate(across(where(is.POSIXct), ~lubridate::as_date(.x, tz = "Pacific/Auckland"))) # Convert to Date
```

```{r}
#| label: create-bizdays-calendar

# Set up 'business calendar' for 'work day' calculations.
# This is used to account for weekends and public holidays when calculating due dates.
# create.calendar() defaults to setting start.date to the min(holidays). So need to specify manual start/end dates.
bawb_biz_calendar <- bizdays::create.calendar(
  "bawb_calendar",
  weekdays = c("saturday", "sunday"),
  holidays = holiday_dates_df$ObservedDate,
  start.date = lubridate::ymd("1970-01-01"),
  end.date = lubridate::ymd("2071-01-01"),
)
```

```{r}
#| label: scrape-turnaround-time-webpage

film_turnaround_df <- scrape_turnaround_times(get_table = "film")
```

```{r}
#| label: parse-turnaround-times

c41_df <- film_turnaround_df |>
  dplyr::filter(Service == "C-41") |>
  parse_working_days_to_numeric() |>
  parse_digits_to_dates(current_date = current_date)

bw_df <- film_turnaround_df |>
  dplyr::filter(Service == "B&W") |>
  parse_working_days_to_numeric() |>
  parse_digits_to_dates(current_date = current_date)

e6_df <- film_turnaround_df |>
  dplyr::filter(Service == "E-6") |>
  parse_weekdays_to_date(date_today = current_date)

ecn2_df <- film_turnaround_df |>
  dplyr::filter(Service == "ECN-2") |>
  parse_working_days_to_numeric() |>
  parse_digits_to_dates(current_date = current_date)

souped_df <- film_turnaround_df |>
  dplyr::filter(Service == "Souped Film") |>
  parse_working_days_to_numeric() |>
  parse_digits_to_dates(current_date = current_date)

alt_df <- film_turnaround_df |>
  dplyr::filter(stringr::str_detect(Service, "^ALT Format.*")) |>
  parse_working_days_to_numeric() |>
  parse_digits_to_dates(current_date = current_date)


turaround_dates_df <- dplyr::bind_rows(
  c41_df,
  bw_df,
  e6_df,
  ecn2_df,
  souped_df,
  alt_df
)
```

```{r}
#| label: format-turnaround-times

turnaround_format_df <- turaround_dates_df |>
  # Format dates into 'weekday day-month-year'
  dplyr::mutate(across(where(is.Date), ~ format(.x, "%A - %d %B")))
```

*As of **`r format(current_datetime, "%A %d %B %Y")`** at `r format(current_datetime, "%H:%M%p")`*


#### C-41

```{r}
#| label: turnaround-date-C41

turnaround_format_df |>
  dplyr::filter(Service == "C-41") |>
  dplyr::select(-Service) |>
  create_table()
```

\

#### B&W

```{r}
#| label: turnaround-date-BW

turnaround_format_df |>
  dplyr::filter(Service == "B&W") |>
  dplyr::select(-Service) |>
  create_table()
```

\

#### E-6

```{r}
#| label: turnaround-date-E6

turnaround_format_df |>
  dplyr::filter(Service == "E-6") |>
  dplyr::select(-Service) |>
  create_table()
```

\

#### ECN-2

```{r}
#| label: turnaround-date-ECN2

turnaround_format_df |>
  dplyr::filter(Service == "ECN-2") |>
  dplyr::select(-Service) |>
  create_table()
```

\

#### Souped

```{r}
#| label: turnaround-date-SOUP

turnaround_format_df |>
  dplyr::filter(Service == "Souped Film") |>
  dplyr::select(-Service) |>
  create_table()
```

\

#### ALT Formats (APS/110/126/127)

```{r}
#| label: turnaround-date-ALT

turnaround_format_df |>
  dplyr::filter(Service == "ALT Formats (APS/110/126/127)") |>
  dplyr::select(-Service) |>
  create_table()
```

\

\


------------------------------------------------------------------------

\

\

#### Website Turnaround Times

```{r}
#| label: display-website-turnaround-days

film_turnaround_df |>
  knitr::kable()
```

[Source](https://theblackandwhitebox.co.nz/turn-around-times/)

\

#### Upcoming Public Holidays

```{r}
#| label: display-upcoming-holidays

holiday_dates_df |>
  dplyr::filter(ObservedDate > current_datetime) |>
  dplyr::mutate(across(where(is.Date), ~ format(.x, "%d-%m-%Y"))) |>
  dplyr::select(HolidayName, ActualDate, ObservedDate, Type, DayOfWeek) |>
  knitr::kable()
```

[Source](https://www.public-holidays.nz/)
